{{extend './common/layout.art'}}
{{block 'main'}}
    {{include './common/header.art'}}
    <!-- 主体内容 -->
    <div class="content">
        {{include './common/aside.art'}}
        <!-- 侧边栏 -->
        <div class="main">
            <!-- 分类标题 -->
            <div class="title">
                {{if message}}
                <h4><p class="text-danger">{{message}}</p></h4>
                {{else}}
                <h4><p class="text-primary">{{modifyArticle ? '请输入以下内容修改文章' : '请输入以下内容添加新文章'}}</p></h4>
                {{/if}}
            </div>
            <!-- /分类标题 -->
            <!-- 
                enctype: 指定表单数据的编码类型
                    1.application/x-www-form-urlencoded 将表单数据编码成get请求参数即是键值对 默认值
                        提交的数据类型则是(username=admin&password=123)
                    2.multipart/form-data 将表单数据编码成二进制数据类型
                        如果表单涉及到文件上传 必须为表单设置enctype="multipart/form-data"
                    3.text/plain text/plain是以纯文本格式（就是一段字符串）发送的. 如果你发送一个对象例如{ name:"leiwuyi", age:12 }一定要对它做JSON.stringfiy()处理，否则将传送[object Object]
                    4.application/json application/json格式在AJAX或者Fetch的POST请求里面可以说是最常见的一种格式. 但是Form表单提交上W3C上HTML5对表单提交的格式已经做了说明
                            新版本浏览器上不支持application/json格式的表单提交
             -->
            <form class="form-container" action="/admin/article-{{modifyArticle ? 'modify' : 'add'}}" method="POST" enctype="multipart/form-data">
                <div class="form-group">
                    <label>标题</label>
                    <input value="{{modifyArticle ? modifyArticle.title : ''}}" name="title" type="text" class="form-control" placeholder="请输入文章标题">
                </div>
                <div class="form-group">
                    <label>作者</label>
                    {{if modifyArticle}}
                    <input type="hidden" name="page" value="{{page}}">
                    <input type="hidden" name="isOne" value="{{isOne}}">
                    <input value="{{modifyArticle.author.username}}" type="text" class="form-control" readonly>
                    {{else}}
                    <input value="{{userInfo.username}}" type="text" class="form-control" readonly>
                    {{/if}}
                    {{if modifyArticle}}
                    <input type="hidden" name="id" value="{{@modifyArticle._id}}">
                    {{else}}
                    <input type="hidden" name="author" value="{{@userInfo._id}}">
                    {{/if}}
                </div>
                {{if !modifyArticle}}
                <div class="form-group">
                    <label>发布时间</label>
                    <!-- 为dateInput显示默认值可以在value中设置2020-04-17 -->
                    <input name="publishDate" type="date" class="form-control">
                </div>
                {{/if}}
                
                <div class="form-group">
                   <label for="exampleInputFile">文章封面</label>
                   <input name="cover" type="file" class="filebtn">
                   <div class="thumbnail-waper">
                       <img class="img-thumbnail" src="{{modifyArticle ? modifyArticle.cover : ''}}">
                   </div>
                </div>
                <div class="form-group">
                    <label>内容</label>
                    <textarea name="content" class="form-control" id="editor">
                        {{modifyArticle ? modifyArticle.content : ''}}
                    </textarea>
                </div>
                <div class="buttons">
                    <input type="submit" class="btn btn-primary">
                </div>
            </form>
            
        </div>
    </div>
    <!-- /主体内容 -->
{{/block}}
{{block 'script'}}
  <script src="/admin/lib/ckeditor5/ckeditor.js"></script>
  <script type="text/javascript">
        
  let editor;

  ClassicEditor
      .create( document.querySelector('#editor'))
      .then(newEditor => {
          editor = newEditor;
      })
      .catch( error => {
          console.error( error );
      });
            // 获取数据
            // const editorData = editor.getData();
  </script>
  <script>
      $('.filebtn').change(function(){
        // 创建文件读取对象 
        var reader = new FileReader();
        // 防止用户恶意修改按钮属性
        if(this.files.length > 1){
            return
        }
        // 读取文件 readAsDataURL 是一个异步方法
        reader.readAsDataURL(this.files[0]);
        reader.onload = function() {
            // 通过onload事件获取到文件读取的结果
            // 文件读取的结果存放在reader.result中
            $('.img-thumbnail').attr('src',reader.result);
        }
      })
  </script>
{{/block}}
